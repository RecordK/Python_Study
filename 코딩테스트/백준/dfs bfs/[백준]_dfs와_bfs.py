# -*- coding: utf-8 -*-
"""[백준] DFS와 BFS

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pOw24Og5jOU7IkcuvzsteuXXzKFcURKY
"""

N, M, V=map(int,input().split())
matrix=[[0]*(N+1) for i in range(N+1)]
visited=[False]*(N+1)
for i in range(M):
  x,y=map(int,input().split())
  matrix[x][y]=matrix[y][x]=1
def dfs(matrix,V,visited):
  visited[V]=True
  print(V,end=' ')
  for i in range(1,N+1):
    if not visited[i]and matrix[V][i]==1:
      dfs(matrix,i,visited)
def bfs(matrix,V,visited):
  queue=[V]
  visited[V]=False
  while queue:
    V=queue.pop(0)
    print(V,end=' ')
    for i in range(1,N+1):
      if visited[i] and matrix[V][i]==1:
        queue.append(i)
        visited[i]=0
dfs(matrix,V,visited)
print()
bfs(matrix,V,visited)
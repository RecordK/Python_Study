# -*- coding: utf-8 -*-
"""Numpy_1.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d2wu3HZaQ_jq6xWE3oHZ92U7AwzbS-QS
"""

!pip install numpy

import numpy as np

# 1차 배열
arr=np.array([1,2,3])
print(arr)

# 2차 배열
arr = np.array([[1,2,3],
               [4,5,6]])
print(arr)

type([1,2,3])
type(arr)

lst2=[[1,2,3],[4,5,6]]
arr2=np.array(lst2)

print(arr2)

type(arr2)

type(lst2)

# shape
arr1 = np.array([1,3,4])
arr2=np.array([[1,2,3],[3,4,5]])

print(arr1.shape,arr2.shape)

#ndim
print(arr1.ndim,arr2.ndim)

#size
print(arr1.size,arr2.size)

## n차원원 배열의의 데이터타입입
arr=np.array([1,2,3],dtype=np.float)
print(arr, arr.dtype)

arr=np.array([1.1,2.2,3.3],dtype=np.int)
print(arr, arr.dtype)

arr=np.array([1.1,2.2,3.3],dtype=np.bool)
print(arr, arr.dtype)

arr=np.array([0,1,2,3])
print(arr,arr.dtype)

arr=arr.astype(np.float32)
print(arr,arr.dtype)

#데이터 타입이 혼재하는 경우
arr=np.array([1,2,3,4.3])
print(arr,arr.dtype)

arr=np.array([1,2,3,"4.3"])
print(arr,arr.dtype)

arr=np.array([1,2,3,"4,문자열"],dtype=int)
print(arr,arr.dtype)

#np.zeros()
arr = np.zeros([2,2])
print(arr)

#np.ones()
arr=np.ones([2,2])

print(arr)

arr=np.full((2,3),5)

print(arr)

np.eye(3,4,k=0)

np.eye(3,4,k=1)

np.eye(3)

arr=np.array([[1,2,3],[4,5,6]])

arr_z=np.zeros_like(arr)
print(arr_z)

arr_z=np.ones_like(arr)
print(arr_z)

arr_f=np.full_like(arr,9)

print(arr_f)

##특정범위의의 값을 가지는는 n차원원 배열열 생성성
lst=list(range(0,9,2))
print(lst)

arr=np.arange(9)

arr

arr=np.arange(3,13,3)

print(arr)

arr=np.arange(stop=9,step=2,start=0)

print(arr)

arr=np.linspace(0,100,11)
print(arr)

arr=np.linspace(0,100,100)
print(arr)

arr=np.linspace(0,100,250)
print(arr)

arr=np.linspace(1,10,10)
print(arr,end="\n\n")
arr=np.logspace(1,10,10,base=2)
print(arr)
arr=np.logspace(1,10,10)
print(arr)

import matplotlib.pyplot as plt

arr=np.random.normal(0,1,10)
print(arr)

arr=np.random.normal(0,1,(2,3))
print(arr)

arr=np.random.normal(0,1,100000)
plt.hist(arr,bins=100)
plt.show()

arr=np.random.rand(1000) #0~1 균등한비율
plt.hist(arr,bins=100)
plt.show()

arr=np.random.randn(100)#정규분포형상
plt.hist(arr,bins=100)
plt.show()

arr=np.random.randint(low=1,high=5,size=10)
print(arr)

arr=np.random.randint(low=1,high=5,size=(3,4))
print(arr)

arr=np.random.randint(5)
print(arr)

arr=np.random.randint(100,200,1000)
plt.hist(arr,bins=100)
plt.show()

#rand() randn(), randint()
#0~1 균등비율율 정규분포형상 랜덤정수수
arr=np.random.rand(10)

arr=np.random.rand(10)

np.random.seed(10)#(고정정)
arr=np.random.rand(10)
print(arr)
np.random.seed(10)#(고정정)
arr=np.random.rand(10)
print(arr)

print(arr)


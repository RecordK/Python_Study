# -*- coding: utf-8 -*-
"""아파트 실거래가 분석.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G5HZ35yphlSa_e0tcpN0fS9I0CES9UIs
"""

import pandas as pd
#1
apt_seoul_2021=pd.read_csv('/content/drive/MyDrive/2021.csv',skiprows=15,encoding='cp949',thousands=',')
apt_seoul_2020=pd.read_csv('/content/drive/MyDrive/2020.csv',skiprows=15,encoding='cp949',thousands=',')

#2
apt_seoul_2021['gu']=apt_seoul_2021['시군구'].str.split(' ',expand=True)[1]
apt_seoul_2021['dong']=apt_seoul_2021['시군구'].str.split(' ',expand=True)[2]
apt_seoul_2020['gu']=apt_seoul_2020['시군구'].str.split(' ',expand=True)[1]
apt_seoul_2020['dong']=apt_seoul_2020['시군구'].str.split(' ',expand=True)[2]

#3
apt_seoul_2021.rename(columns = {'전용면적(㎡)':'전용면적'},inplace=True)
apt_seoul_2020.rename(columns = {'전용면적(㎡)':'전용면적'},inplace=True)

#4
apt_seoul_2021.rename(columns = {'거래금액(만원)':'거래금액'},inplace=True)
apt_seoul_2020.rename(columns = {'거래금액(만원)':'거래금액'},inplace=True)

#5
apt_seoul_2021['pyung']=round(apt_seoul_2021['전용면적']/3.3,2)
apt_seoul_2020['pyung']=round(apt_seoul_2020['전용면적']/3.3,2)

#6
apt_seoul_2021['pyung2']=pd.cut(
    apt_seoul_2021['pyung'],
    [0,10,20,30,40,50,1000],
    labels=['10평이하','10평대','20평대','30평대','40평대','40평이상']
)
apt_seoul_2020['pyung2']=pd.cut(
    apt_seoul_2020['pyung'],
    [0,10,20,30,40,50,1000],
    labels=['10평이하','10평대','20평대','30평대','40평대','40평이상']
)

#7
apt_seoul_2021['gu'].value_counts()
apt_seoul_2020['gu'].value_counts()

#8
apt_seoul_2021.pivot_table(values='거래금액',index='gu',aggfunc='mean')
apt_seoul_2020.pivot_table(values='거래금액',index='gu',aggfunc='mean')

#8.1
apt_seoul_2021.pivot_table(values='pyung',columns='pyung2',aggfunc='count')
apt_seoul_2020.pivot_table(values='pyung',columns='pyung2',aggfunc='count')

#8.2
apt_seoul_2021.pivot_table(values='거래금액',columns='pyung2',aggfunc='mean')
apt_seoul_2020.pivot_table(values='거래금액',columns='pyung2',aggfunc='mean')

#8.3
ma21=apt_seoul_2021.pivot_table(values='거래금액',index=['gu','pyung2'],aggfunc='mean')
ma20=apt_seoul_2020.pivot_table(values='거래금액',index=['gu','pyung2'],aggfunc='mean')
ma21.sort_values('거래금액',ascending='False')
ma20.sort_values('거래금액',ascending='False')

# 8.3 구별 평형별 평균거래금액이 가장 비싼 지역 10개만 출력하세요
apt_seoul_2021.pivot_table(
    index=["gu","pyung2"], 
    values="거래금액", 
    aggfunc="mean").sort_values("거래금액",ascending=False).head(10)

#9
gn32021=apt_seoul_2021[apt_seoul_2021['gu'].isin(['강남구','서초구','송파구'])]
gn32020=apt_seoul_2020[apt_seoul_2020['gu'].isin(['강남구','서초구','송파구'])]

#10
gn222021=apt_seoul_2021[~apt_seoul_2021['gu'].isin(['강남구','서초구','송파구'])]
gn222020=apt_seoul_2020[~apt_seoul_2020['gu'].isin(['강남구','서초구','송파구'])]

#11
g2021=gn32021[['거래금액']].mean()
g2021=g2021.append(gn32021[['거래금액']].max())
g2021=g2021.append(gn32021[['거래금액']].min())
g2020=gn32020[['거래금액']].mean()
g2020=g2020.append(gn32020[['거래금액']].max())
g2020=g2020.append(gn32020[['거래금액']].min())

g2021=g2021.append(gn222021[['거래금액']].mean())
g2021=g2021.append(gn222021[['거래금액']].max())
g2021=g2021.append(gn222021[['거래금액']].min())
g2020=g2020.append(gn222020[['거래금액']].mean())
g2020=g2020.append(gn222020[['거래금액']].max())
g2020=g2020.append(gn222020[['거래금액']].min())
index_la=['강남3구평균','강남3구최댓값','강남3구최솟값','그외평균','그외최대','그외최소']
g21=pd.DataFrame(g2021,columns='거래금액')
g21

apt_seoul_2021.info()

gn3_desc=gn32021[['거래금액']].describe()
gn22_desc=gn222021[['거래금액']].describe()
gn3_desc.join(gn22_desc,lsuffix='_강남3구',rsuffix='_그외지역')


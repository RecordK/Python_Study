# -*- coding: utf-8 -*-
"""복습#4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ksqpkY4xDVrd4gfaJL6M3Zq96Fftcjw2
"""

import requests
url='http://www.kma.go.kr/wid/queryDFSRSS.jsp?zone=1154564000'
req=requests.get(url)
req.text

# html 분석 파싱(parsing) 원하는 태그를 검색 추출
# Parser Beautifulsoup
from bs4 import BeautifulSoup


#bs.find('태그','속성')=단순 태그만 검색, 복잡한 구조 검색 불가능
#bs.find_all('태그','속성')= 단순 태그만 검색 복잡한 구조 검색 불가능
bs=BeautifulSoup(req.text,'html.parser')
'''
주요 css5가지
#id id='id값'
.class class='class값' .cls1.cls2 클래스값여러개 가지고 있는 선택자 class='cls1 cls2'
tag <tag>
선택자1> 선택자2 자식 선택자
선택자1 선택자2 자손 선택자
'''
동네=bs.select_one('category').text
print(f'동네이름 : {동네}')

we=bs.select('data')
len(we)

tl=[]

for w in we:
  # print('시간=',w.select_one('hour').text)
  # print('온도=',w.select_one('temp').text)
  # print('날씨=',w.select_one('wfkor').text)
  # print('습도=',w.select_one('reh').text)
  # print()
  tl.append(float(w.select_one('temp').text))

import pandas as pd
s1=pd.Series(tl)
s1.plot()

# 벅스 음원차트
#pandas.read_html()
url='https://music.bugs.co.kr/chart?wl_ref=M_left_02_01'
chart=pd.read_html(url)[0]
chart=chart[['순위','곡','아티스트','앨범']]
chart[:10]

#requests + BeautifulSoup
html= requests.get(url).text
from bs4 import BeautifulSoup
bs=BeautifulSoup(html,'html.parser')
bs.select_one('.list.trackList.byChart')

trl=bs.select('.list.trackList.byChart tbody tr')
for Tr in trl:
  print('순위 : ',Tr.select_one('td:nth-of-type(2) .ranking strong').text)
  print('곡제목 : ',Tr.select_one('th:nth-of-type(1)').text.strip())
  print('가수 : ',Tr.select_one('.artist').text.strip())
  print('앨범 : ',Tr.select_one('.album').text.strip())
  print()

# 이미지 다운로드
import urllib
url='https://photo.hankooki.com/newsphoto/v001/2021/12/22/sjmao20211222184255_O_00_C_1.jpg'
urllib.request.urlretrieve(url,'iu.png')

import numpy as np

arr1=np.arange(1,46)

arr1

arr1.reshape(3,5,3)

a2=np.arange(1,10).reshape(3,3)

a2[a2%2==0]

a2

import pandas as pd
s1=pd.Series([90,80,70,80])
s1

scores=[
        [90,80,70],
        [80,70,80]
]
df1=pd.DataFrame(scores)

df1

!dir ../content/drive/MyDrive/*.csv

with open('../content/drive/MyDrive/a.csv') as f:
  data=pd.read_csv(f)
path='../content/drive/MyDrive/a.csv'
apt=pd.read_csv(path,encoding='utf-8',skiprows=15,thousands=',')
apt.info()

apt['단지명']

# 평방미터 => 평 변환 => apt DF에 추가
apt['평 수']=apt['전용면적(㎡)']/3.3

apt.drop('pyung',axis=1)

apt['평 수']=round(apt['평 수'],2)

import numpy as np
apt['해제사유발생일'].isna()
apt['해제사유발생일'].notna()

apt[apt['단지명'].str.find('현대')>=0].drop('pyung',axis=1,inplace=True)

apt.drop('pyung',axis=1,inplace=True)

apt[apt['단지명'].str.find('현대')>=0]

newapt=apt[apt['건축년도']>=2019]

newbigapt=newapt[newapt['평 수']>20]

newbigapt.drop(['번지','본번','부번'],axis=1,inplace=True)

newbigapt.drop(['도로명','계약일','해제사유발생일'],axis=1,inplace=True)

newbigapt.drop(['거래유형','중개사소재지','전용면적(㎡)'],axis=1,inplace=True)

newbigapt

newbigapt['구']=newbigapt['시군구'].str.split(' ',expand=True)[1]

newbigapt.drop('rn',axis=1,inplace=True)



url='https://music.bugs.co.kr/chart?wl_ref=M_left_02_01'
df=pd.read_html(url)[0]

df=df[['순위','곡','아티스트','앨범']]



df[df['아티스트'].value_counts().min()]

df['아티스트'].value_counts()
df['아티스트'].value_counts().max()
df['아티스트'].value_counts().min()
df[df['아티스트'].str.find('아이유')>=0].count()
df[df['아티스트'].str.find('유희열')>=0].count()

df1=df['아티스트'].value_counts()
df2=pd.DataFrame(df1)
df2[df2['아티스트'].values==df['아티스트'].value_counts().max()]

df[df['아티스트'].str.find('레드벨벳')>=0]



